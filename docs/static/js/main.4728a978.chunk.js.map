{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["A4","Letter","Fit","Portrait","Landscape","None","Small","Big","App","props","readfiles","event","a","fileList","fileInput","current","files","console","log","length","imgArr","i","imgDataUrl","window","URL","createObjectURL","push","id","uuidv4","file","setState","state","images","createPdf","mime","PDFDocument","create","pdfDoc","fetch","res","arrayBuffer","raw","headers","get","embedJpg","embedPng","img","pageSize","getPageSize","width","height","page","addPage","drawImage","x","y","scaleFactor","Math","min","getWidth","pageMargin","getHeight","w","h","save","pdfBytes","blob","Blob","type","url","open","error","lastError","lastMime","handleDrop","droppedId","currentId","droppedIndex","arr","forEach","index","droppedImage","splice","currentIndex","pageOrientation","PageSizes","reverse","getAspectRatio","undefined","forceShowOption","React","createRef","pageWrapper","border","display","background","pageStyle","margin","flex","backgroundSize","backgroundRepeat","backgroundPosition","this","ceil","boxShadow","landing","ref","onChange","multiple","listView","style","flexWrap","justifyContent","map","padding","draggable","onDragStart","e","dataTransfer","effectAllowed","setData","onDrop","stopPropagation","getData","onDragOver","preventDefault","onDragEnter","backgroundImage","pageMarginSection","paddingBottom","fontSize","color","paddingTop","flexDirection","textAlign","onClick","optionStyle","closeBtn","options","className","actions","overflow","replace","c","r","random","toString","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4728a978.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport { PageSizes, PDFDocument } from 'pdf-lib'\n\nconst A4 = \"A4\", Letter = \"US Letter\", Fit = \"Same as Image\", Portrait = \"Portrait\", Landscape = \"Landscape\", None = \"0\", Small = \"20\", Big = \"50\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      images: [],\n      pageOrientation: Portrait,\n      pageSize: A4,\n      pageMargin: None,\n      lastError: undefined,\n      lastMime: undefined,\n      forceShowOption: false\n    };\n    this.fileInput = React.createRef();\n  }\n  render() {\n    let pageWrapper = {\n      height: \"192px\",\n      width: \"192px\",\n      border: \"none\",\n      display: \"flex\",\n      background: \"white\"\n    };\n\n    let pageStyle = {\n      margin: '0px',\n      flex: \"1\",\n      backgroundSize: \"contain\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundPosition: \"center\"\n    };\n\n    if (this.state.pageMargin === Small) {\n      pageStyle.margin = \"5px\";\n    } else if (this.state.pageMargin === Big) {\n      pageStyle.margin = \"10px\";\n    }\n\n    if (this.state.pageSize !== Fit) {\n      pageWrapper.width = Math.ceil(192 * this.getAspectRatio()) + 'px';\n      pageWrapper.boxShadow = \"5px 5px 5px rgb(200,200,200)\";\n    }\n\n    const landing = (<div>\n      <input type=\"file\" ref={this.fileInput} onChange={this.readfiles} multiple></input>\n    </div>);\n\n    const listView = (<div style={{ display: 'flex', flexWrap: 'wrap', flex: \"1\", justifyContent: \"center\" }}>\n      {this.state.images.map((img, index) => (\n        <div\n          style={{ padding: \"5px\" }}\n          key={img.id}\n          draggable={true}\n          onDragStart={(e) => {\n            e.dataTransfer.effectAllowed = 'move';\n            e.dataTransfer.setData('text/plain', img.id);\n            console.log(\"Drag start \" + index);\n          }}\n          onDrop={(e) => {\n            if (e.stopPropagation) {\n              e.stopPropagation(); // stops the browser from redirecting.\n            }\n            let droppedId = e.dataTransfer.getData(\"text/plain\");\n            console.log(\"droppedId: \" + droppedId);\n            this.handleDrop(droppedId, img.id);\n          }}\n          onDragOver={(e) => {\n            if (e.preventDefault) {\n              e.preventDefault(); // stops the browser from redirecting.\n            }\n          }}\n          onDragEnter={(e) => { }}\n        >\n          <div style={{ ...pageWrapper }}>\n            <div style={{ ...pageStyle, backgroundImage: \"url('\" + img.imgDataUrl + \"')\" }}>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>);\n\n    const pageMarginSection = (<div>\n      <div style={{ paddingBottom: \"10px\", fontSize: \"16px\", color: \"gray\", paddingTop: \"20px\" }}>Page margin</div>\n      <div style={{ display: \"flex\" }}>\n        <div style={{\n          flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\n          justifyContent: \"center\", textAlign: \"center\",\n          background: (this.state.pageMargin == None ? \"purple\" : \"rgb(240,240,240)\"),\n          color: (this.state.pageMargin == None ? \"white\" : \"black\")\n        }} onClick={() => this.setState({ pageMargin: None })}>None</div>\n        <div style={{\n          flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\n          justifyContent: \"center\", textAlign: \"center\",\n          background: (this.state.pageMargin == Small ? \"purple\" : \"rgb(240,240,240)\"),\n          color: (this.state.pageMargin == Small ? \"white\" : \"black\")\n        }} onClick={() => this.setState({ pageMargin: Small })}>Small</div>\n        <div style={{\n          flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\n          justifyContent: \"center\", textAlign: \"center\",\n          background: (this.state.pageMargin == Big ? \"purple\" : \"rgb(240,240,240)\"),\n          color: (this.state.pageMargin == Big ? \"white\" : \"black\")\n        }} onClick={() => this.setState({ pageMargin: Big })}>Big</div>\n      </div>\n    </div>);\n\n    const optionStyle = {}\n    if (this.state.forceShowOption) {\n      optionStyle.display = \"block\"\n    }\n\n    const closeBtn = this.state.forceShowOption ? <span onClick={() => { this.setState({ forceShowOption: false }) }}>X</span> : <span></span>;\n\n    const options = (\n      <div className=\"options\" style={optionStyle}>\n        <div style={{ paddingBottom: \"10px\", fontSize: \"20px\", display: \"flex\", justifyContent: \"space-between\" }}>\n          <span>Options</span>\n          {closeBtn}\n        </div>\n        <div style={{ paddingBottom: \"10px\", fontSize: \"16px\", color: \"gray\", paddingTop: \"10px\" }}>Page orientation</div>\n        <div style={{ display: \"flex\" }}>\n          <div style={{\n            flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\n            justifyContent: \"center\", textAlign: \"center\",\n            background: (this.state.pageOrientation == Portrait ? \"purple\" : \"rgb(240,240,240)\"),\n            color: (this.state.pageOrientation == Portrait ? \"white\" : \"black\")\n          }}\n            onClick={() => this.setState({ pageOrientation: Portrait })}>Portrait</div>\n          <div style={{\n            flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\n            justifyContent: \"center\", textAlign: \"center\",\n            background: (this.state.pageOrientation == Landscape ? \"purple\" : \"rgb(240,240,240)\"),\n            color: (this.state.pageOrientation == Landscape ? \"white\" : \"black\")\n          }}\n            onClick={() => this.setState({ pageOrientation: Landscape })}>Landscape</div>\n        </div>\n        <div style={{ paddingBottom: \"10px\", fontSize: \"16px\", color: \"gray\", paddingTop: \"20px\" }}>Page size</div>\n        <div style={{ display: \"flex\" }}>\n          <div style={{\n            flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\n            justifyContent: \"center\", textAlign: \"center\",\n            background: (this.state.pageSize == A4 ? \"purple\" : \"rgb(240,240,240)\"),\n            color: (this.state.pageSize == A4 ? \"white\" : \"black\")\n          }} onClick={() => this.setState({ pageSize: A4 })}>A4</div>\n          <div style={{\n            flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\n            justifyContent: \"center\", textAlign: \"center\",\n            background: (this.state.pageSize == Letter ? \"purple\" : \"rgb(240,240,240)\"),\n            color: (this.state.pageSize == Letter ? \"white\" : \"black\")\n          }} onClick={() => this.setState({ pageSize: Letter })}>US Letter</div>\n          <div style={{\n            flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\n            justifyContent: \"center\", textAlign: \"center\",\n            background: (this.state.pageSize == Fit ? \"purple\" : \"rgb(240,240,240)\"),\n            color: (this.state.pageSize == Fit ? \"white\" : \"black\")\n          }} onClick={() => this.setState({ pageSize: Fit })}>Same as Image</div>\n        </div>\n        {this.state.pageSize !== Fit ? pageMarginSection : (<div></div>)}\n      </div>\n    );\n    const actions = (<div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n      <div style={{ display: \"flex\" }} >\n        <button onClick={() => {\n          this.setState({\n            forceShowOption: true\n          });\n        }} className=\"option-btn\">PDF Options</button>\n        <button>Add page</button>\n      </div>\n      <button onClick={this.createPdf}>Generate PDF</button>\n    </div>);\n\n    if (this.state.images.length < 1) {\n      return landing;\n    }\n\n    return (\n      <div style={{ display: \"flex\", flexDirection: \"column\", width: \"100vw\", height: \"100vh\", overflow: \"hidden\" }}>\n        <div style={{ display: \"flex\", overflow: \"hidden\", flex: \"1\", height: \"100%\" }}>\n          <div style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\", flex: \"1\", overflow: \"auto\", background: \"rgb(240,240,240)\" }}>\n            {listView}\n            <div style={{ flex: \"1\" }}></div>\n          </div>\n          {options}\n        </div>\n        {actions}\n      </div>\n\n    );\n\n    // return (\n    //   <div>\n    //     <div>This app is not styled yet</div>\n    //     <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n    //       {this.state.images.map((img, index) => (\n    //         <div style={{ display: 'flex', flexDirection: 'column' }}>\n    //           <img src={img.imgDataUrl} alt=\"\" style={{ width: \"96px\", height: \"128px\" }}></img>\n    //           <div>{\"Page \" + (index + 1)}</div>\n    //         </div>\n    //       ))}\n    //     </div>\n    //     <div>\n    //       <input type=\"file\" ref={this.fileInput} onChange={this.readfiles} multiple></input>\n    //       <button onClick={() => { this.setState({ images: [] }) }}>Clear</button>\n    //       <button onClick={this.createPdf}>Generate PDF</button>\n    //     </div>\n    //     {this.state.lastError ?\n    //       <div>\n    //         <div>{this.state.lastError}</div>\n    //         <div>{this.state.lastMime}</div>\n    //       </div> : <div>{this.state.lastMime}</div>}\n    //     <div>{this.state.lastMime}</div>\n    //   </div>);\n  }\n\n  //https://labs.madisoft.it/javascript-image-compression-and-resizing/\n  /* resizeImage = async (file, width, height) => {\n    const blobURL = window.URL.createObjectURL(file);\n    const img = new Image();\n    img.src = blobURL;\n    img.onload = function (ev) {\n      window.URL.revokeObjectURL(blobURL); // release memory\n      // Use the img\n      const canvas = document.createElement('canvas');\n      canvas.width = width;\n      canvas.height = height;\n      const ctx = canvas.getContext('2d');\n      ctx.drawImage(img, 0, 0, width, height);\n    };\n\n  } */\n\n  readfiles = async (event) => {\n    let fileList = this.fileInput.current.files;\n    console.log(fileList.length);\n    let imgArr = [];\n    for (let i = 0; i < fileList.length; i++) {\n      const imgDataUrl = window.URL.createObjectURL(fileList[i]);\n      //let img = await this.loadImage(imgDataUrl);\n      imgArr.push({ id: this.uuidv4(), imgDataUrl, file: fileList[i], /* width: img.width, height: img.height */ });\n    }\n    this.setState((state) => ({\n      images: [...state.images, ...imgArr]\n    }));\n  }\n\n  // loadImage = (objUrl) => {\n  //   return new Promise((resolve, reject) => {\n  //     let img = new Image();\n  //     img.onload = () => {\n  //       resolve(img);\n  //     };\n  //     img.onerror = (e) => {\n  //       reject(e);\n  //     };\n  //     img.src = objUrl;\n  //   });\n  // }\n\n  createPdf = async () => {\n\n    let mime = \"\";\n    try {\n      const pdfDoc = await PDFDocument.create();\n      for (let i = 0; i < this.state.images.length; i++) {\n        let res = await fetch(this.state.images[i].imgDataUrl);\n\n        let raw = await res.arrayBuffer();\n        mime = res.headers.get('content-type');\n        console.log(res.headers.get('content-type'));\n        //console.log(raw);\n        const img = await (res.headers.get('content-type') === 'image/jpeg' ? pdfDoc.embedJpg(raw) : pdfDoc.embedPng(raw));\n        let pageSize = this.getPageSize();\n        if (this.state.pageSize === Fit) {\n          pageSize = [img.width, img.height];\n        }\n        const page = pdfDoc.addPage(pageSize);\n        if (this.state.pageSize === Fit) {\n          page.drawImage(img, {\n            x: 0,\n            y: 0,\n            width: img.width,\n            height: img.height,\n          });\n        } else {\n          //page.setSize(pageSize[0], pageSize[1]);\n          let scaleFactor = Math.min((page.getWidth() - this.state.pageMargin) / img.width, (page.getHeight() - this.state.pageMargin) / img.height);\n          let w = img.width * scaleFactor;\n          let h = img.height * scaleFactor;\n          //page.setSize(img.width,img.height);\n          console.log(img.width + \" \" + img.height);\n          console.log(page.getWidth() + \" \" + page.getHeight());\n          page.drawImage(img, {\n            x: page.getWidth() / 2 - w / 2,\n            y: page.getHeight() / 2 - h / 2,\n            width: w,\n            height: h,\n          });\n        }\n      }\n      const pdfBytes = await pdfDoc.save();\n      let blob = new Blob([pdfBytes], { type: \"application/pdf\" });\n      let url = window.URL.createObjectURL(blob);\n      window.open(url);\n      // var link = document.createElement('a');\n      // link.href = window.URL.createObjectURL(blob);\n      // var fileName = \"file.pdf\";\n      // link.download = fileName;\n      // link.click();\n    }\n    catch (err) {\n      console.error(err);\n      this.setState({ lastError: err, lastMime: mime });\n    }\n  }\n\n  handleDrop = (droppedId, currentId) => {\n    console.log(\"droppedId: \" + droppedId + \" currentId: \" + currentId);\n    let droppedIndex = -1;\n    let arr = [...this.state.images];\n    arr.forEach((img, index) => {\n      if (img.id === droppedId) {\n        droppedIndex = index;\n      }\n    });\n    let droppedImage = arr.splice(droppedIndex, 1)[0];\n    let currentIndex = -1;\n    arr.forEach((img, index) => {\n      if (img.id === currentId) {\n        currentIndex = index;\n      }\n    });\n    arr.splice(currentIndex, 0, droppedImage);\n    console.log(arr);\n\n    this.setState({\n      images: arr\n    });\n  }\n\n  getPageSize = () => {\n    switch (this.state.pageSize) {\n      case A4:\n        if (this.state.pageOrientation === Portrait) {\n          return PageSizes.A4;\n        }\n        else {\n          let pageSize = [...PageSizes.A4];\n          pageSize.reverse();\n          return pageSize;\n        }\n      case Letter:\n        if (this.state.pageOrientation === Portrait) {\n          return PageSizes.Letter;\n        }\n        else {\n          let pageSize = [...PageSizes.Letter];\n          pageSize.reverse();\n          return pageSize;\n        }\n      default:\n        return undefined;\n    }\n  }\n\n  getAspectRatio = () => {\n    let pageSize = this.getPageSize();\n    return pageSize[0] / pageSize[1];\n  }\n\n  // getPreviewImageSize = (pageWidth, pageHeight, imageWidth, imageHeight) => {\n  //   let pageSize = this.getPageSize();\n  //   let margin = this.state.pageMargin * pageHeight / pageSize[1];\n  //   let scaleFactor = Math.min((pageWidth - margin) / img.width, (pageHeight - margin) / img.height);\n  //   let w = imageWidth * scaleFactor;\n  //   let h = imageHeight * scaleFactor;\n  //   return [w, h];\n  // }\n\n  // getPreviewPageSize = () => {\n  //   return {\n  //     height: 192,\n  //     width: 192 * this.getAspectRatio()\n  //   };\n  // }\n\n  // getMaxImageSize=()=>{\n  //   let maxWidth = -1;\n  //   let maxHeight = -1;\n  //   this.state.images.forEach(image => {\n  //     if (image.width > maxWidth) maxWidth = image.width;\n  //     if (image.height > maxWidth) maxHeight = image.height;\n  //   });\n  //   return {\n  //     width: maxWidth,\n  //     height: maxHeight\n  //   };\n  // }\n\n  /* createPdf = async () => {\n    const pdfDoc = await PDFDocument.create();\n    this.createPage(pdfDoc, 1);\n  }\n\n  createPage = (pdfDoc, index) => {\n    this.embedImage(pdfDoc, index).then(() => {\n      if (index > this.state.images.length) {\n        pdfDoc.save().then((blob) => {\n          var link = document.createElement('a');\n          link.href = window.URL.createObjectURL(blob);\n          var fileName = \"file.pdf\";\n          link.download = fileName;\n          link.click();\n        });\n      }\n      this.createPage(pdfDoc, index + 1);\n    });\n  }\n\n  embedImage = async (pdfDoc, index) => {\n    if (index > this.state.images.length) return;\n    let raw = await (await fetch(this.state.images[index - 1])).blob();\n    const img = await pdfDoc.embedJpg(raw);\n    const page = pdfDoc.addPage();\n    page.drawImage(img, {\n      x: 0,\n      y: 0,\n      width: page.getWidth(),\n      height: page.getHeight(),\n    });\n  } */\n\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}